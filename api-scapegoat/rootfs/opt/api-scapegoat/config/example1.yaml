---
# the path under which API scapegoat should listen
route: /api
# the api you want to proxy
target: 'http://192.168.100.233:8080'
pathRewrite:
  # all requests to /api/hello will be forwarded to /rest/api/hello
  ^/api/hello: /other/api/hello
  # all requests to /api/todos will be forwarded to /todos
  ^/api/todos: /todos
# rewrites the origin of the 'host' header to the target URL
changeOrigin: 'false'
router:
  # when request.headers.host == 'myclient',
  # override target 'myclient' to 'https://jsonplaceholder.typicode.com'
  'myclient': 'https://jsonplaceholder.typicode.com'
  # when request.headers.host == '192.168.100.200:8080',
  # override target '192.168.100.200:8080' to 'http://google.com'
  '192.168.100.200:8080': 'http://google.de'
failover:
  response:
    # the http status code to return
    status_code: 202
    headers:
      # should match the body's content type
      content-type: application/json
      # the server name which responds to the request (doesn't need to be changed)
      server: API Scapegoat
    # the content that should be returned
    body: '{ "status": "api offline" }'
